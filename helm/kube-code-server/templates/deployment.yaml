apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kube-code-server.fullname" . }}
  labels:
    {{- include "kube-code-server.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "kube-code-server.fullname" . }}
  selector:
    matchLabels:
        {{- include "kube-code-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret-env: {{ include (print $.Template.BasePath "/secrets-env.yaml") . | sha256sum }}
        checksum/addtional-configmaps: {{ include (print $.Template.BasePath "/additional-configmaps.yaml") . | sha256sum }}
      labels:
      {{- include "kube-code-server.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
      initContainers:
        - name: init-chmod-data
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /home
          securityContext:
            runAsUser: {{ .Values.volumePermissions.securityContext.runAsUser }}
          volumeMounts:
            - name: data
              mountPath: /home
        # - name: customization
        #   image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        #   imagePullPolicy: IfNotPresent
        #   env:
        #     - name: SERVICE_URL
        #       value: https://open-vsx.org/vscode/gallery
        #     - name: ITEM_URL
        #       value: https://open-vsx.org/vscode/item
        #   command:
        #     - sh
        #     - -c
        #     - |
        #       chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /home/coder
        #   volumeMounts:
        #     - name: data
        #       mountPath: /home/coder
        #     {{- range $cm := .Values.additionalConfigMaps }}
        #     - name: {{ $cm.name }}-{{ $.Values.fullnameOverride }}
        #       mountPath: {{ $cm.mountPath | quote }}
        #     {{- end }}
        #   {{- range .Values.extraConfigmapMounts }}
        #     - name: {{ . }}
        #       mountPath: /custom-configmaps/{{ . }}
        #   {{- end }}


{{- if .Values.extraInitContainers }}
{{ tpl .Values.extraInitContainers . | indent 6}}
{{- end }}
      {{- end }}
      containers:
{{- if .Values.extraContainers }}
{{ tpl .Values.extraContainers . | indent 8}}
{{- end }}
        - name: docker-dind
          image: docker:20.10.22-dind
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 250m
              memory: 256M
          securityContext:
            privileged: true
            procMount: Default
          env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
          - name: DOCKER_DRIVER
            value: "overlay2"
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
          {{- end }}
          {{- if .Values.lifecycle.enabled }}
          lifecycle:
            {{- if .Values.lifecycle.postStart }}
            postStart:
              {{ toYaml .Values.lifecycle.postStart | nindent 14 }}
            {{- end }}
            {{- if .Values.lifecycle.preStop }}
            preStop:
              {{ toYaml .Values.lifecycle.preStop | nindent 14 }}
            {{- end }}
          {{- end }}
          env:
        {{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 10 }}
        {{- end }}
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
            {{- if .Values.existingSecret }}
                name: {{ .Values.existingSecret }}
            {{- else }}
                name: {{ template "kube-code-server.fullname" . }}
            {{- end }}
                key: password
        {{- if .Values.extraArgs }}
          args:
{{ toYaml .Values.extraArgs | indent 10 }}
        {{- end }}
          volumeMounts:
            - name: data
              mountPath: /home/coder
          {{- range .Values.extraConfigmapMounts }}
            - name: {{ . }}
              mountPath: /custom-configmaps/{{ . }}
          {{- end }}
          {{- range .Values.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: {{ .readOnly }}
          {{- end }}
            {{- range $cm := .Values.additionalConfigMaps }}
            - name: {{ $cm.name }}-{{ $.Values.fullnameOverride }}
              mountPath: {{ $cm.mountPath | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "kube-code-server.fullname" . }}
      {{- else  }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- end}}
      volumes:
        {{- range $cm := .Values.additionalConfigMaps }}
        - name: {{ $cm.name }}-{{ $.Values.fullnameOverride }}
          configMap:
            name: {{ $cm.name }}-{{ $.Values.fullnameOverride }}
            defaultMode: {{ $cm.defaultMode }}
        {{- end }}

      {{- range .Values.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            defaultMode: {{ .defaultMode }}
      {{- end }}
      {{- range .Values.extraConfigmapMounts }}
        - name: {{ . }}
          configMap:
            name: {{ . }}
      {{- end }}
      {{- range .Values.extraVolumeMounts }}
        - name: {{ .name }}
        {{- if .existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim }}
        {{- else }}
          hostPath:
            path: {{ .hostPath }}
            type: Directory
        {{- end }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.sizeInGb }}Gi

