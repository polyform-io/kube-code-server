---
# Source: kube-code-server/templates/secrets-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test
  labels:
    helm.sh/chart: kube-code-server-0.1.6
    app.kubernetes.io/name: kube-code-server
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "4.9.1"
    app.kubernetes.io/managed-by: Helm
data:
  
  password: "Qk5KVSo3NjV0aGtq"
---
# Source: kube-code-server/templates/additional-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "sh-test"
data:
  "setup-tools.sh": |-
    
    illegal base64 data at input byte 0
---
# Source: kube-code-server/templates/additional-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "owned-test"
data:
  "zshrc": |-
    
    illegal base64 data at input byte 0
  "current-env.sh": |-
    
    illegal base64 data at input byte 0
  "sops.yaml": |-
    
    illegal base64 data at input byte 8
---
# Source: kube-code-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test
  labels:
    helm.sh/chart: kube-code-server-0.1.6
    app.kubernetes.io/name: kube-code-server
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "4.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kube-code-server
    app.kubernetes.io/instance: test
---
# Source: kube-code-server/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test
  labels:
    helm.sh/chart: kube-code-server-0.1.6
    app.kubernetes.io/name: kube-code-server
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "4.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: test
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-code-server
      app.kubernetes.io/instance: test
  template:
    metadata:
      annotations:
        checksum/secret-env: e92a7e1217611a7441824d949527bddfe79b8fbeea7d34c1f54c0222cbb5579a
      labels:
        app.kubernetes.io/name: kube-code-server
        app.kubernetes.io/instance: test
    spec:
      imagePullSecrets:
        []
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init-chmod-data
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              chown -R 1000:1000 /home

          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /home
            - name: sh-test
              mountPath: "/scripts"
            - name: owned-test
              mountPath: "/owned-configmaps/"
      containers:
        - name: kube-code-server
          image: "codercom/code-server:4.9.1"
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test
                  key: password
          volumeMounts:
            - name: data
              mountPath: /home
            - name: docker-configs
              mountPath: /custom-configmaps/docker-configs
            - name: runners-aws-profiles
              mountPath: /custom-configmaps/runners-aws-profiles
            - name: runners-sh
              mountPath: /custom-configmaps/runners-sh
            - name: runners-terragrunt
              mountPath: /custom-configmaps/runners-terragrunt
            - name: sh-test
              mountPath: "/scripts"
            - name: owned-test
              mountPath: "/owned-configmaps/"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
      serviceAccountName: runners
      volumes:
        - name: sh-test
          configMap:
            name: sh-test
            defaultMode: 0555
        - name: owned-test
          configMap:
            name: owned-test
            defaultMode: 0555
        - name: docker-configs
          configMap:
            name: docker-configs
        - name: runners-aws-profiles
          configMap:
            name: runners-aws-profiles
        - name: runners-sh
          configMap:
            name: runners-sh
        - name: runners-terragrunt
          configMap:
            name: runners-terragrunt
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 50Gi
---
# Source: kube-code-server/templates/virtual-service.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: test
  labels:
    helm.sh/chart: kube-code-server-0.1.6
    app.kubernetes.io/name: kube-code-server
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "4.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  hosts:
    - "test.tool.engineering.int.firefly.exchange"
  gateways:
    - 'istio-system/internal-gateway'
  http:
    - route:
        - destination:
            port:
              number: 8080
            host: 'test.actions-runner-system.svc.cluster.local'
---
# Source: kube-code-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "test-test-connection"
  labels:
    helm.sh/chart: kube-code-server-0.1.6
    app.kubernetes.io/name: kube-code-server
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "4.9.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['test:8080']
  restartPolicy: Never
